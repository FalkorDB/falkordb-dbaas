apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    dashboards: "grafana"
spec:
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  deployment:
    spec:
      replicas: 1
      template:
        spec:
          nodeSelector:
            node_pool: observability-resources
          securityContext: # Pod-level security context (important for initContainer)
            runAsUser: 0 # Run initContainer as root
            runAsGroup: 0
          initContainers:
            - name: init-grafana-data
              image: busybox # Or any image with chown
              command: ["chown", "-R", "1001:1001", "/var/lib/grafana"]
              volumeMounts:
                - name: grafana-data
                  mountPath: /var/lib/grafana
          containers:
            - name: grafana
              readinessProbe:
                failureThreshold: 3
              resources:
                requests:
                  cpu: "500m"
                  memory: "256Mi"
                limits:
                  cpu: "2"
                  memory: "2Gi"
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: ["ALL"]
                runAsUser: 1001
                runAsGroup: 1001
                runAsNonRoot: true
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
  config:
    log:
      mode: "console"
    auth:
      disable_login_form: "false"
  ingress:
    metadata:
      annotations:
        networking.gke.io/managed-certificates: grafana-managed-cert
        kubernetes.io/ingress.class: "gce" # Updated annotation
    spec:
      rules:
        - host: grafana.observability.dev.internal.falkordb.cloud
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
