apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: victoriametrics
  namespace: argocd
spec:
  project: default
  source:
    chart: victoria-metrics-k8s-stack
    repoURL: https://victoriametrics.github.io/helm-charts
    targetRevision: 0.35.1
    helm:
      releaseName: vm
      valuesObject:
        fullnameOverride: "vm"
        defaultDashboards:
          enabled: true
          annotations:
            argocd.argoproj.io/sync-options: ServerSideApply=true
          dashboards:
            victoriametrics-vmagent:
              enabled: false
          grafanaOperator:
            enabled: true
            spec:
              allowCrossNamespaceImport: false
              instanceSelector:
                matchLabels:
                  dashboards: grafana
        defaultRules:
          create: false
        victoria-metrics-operator:
          operator:
            disable_prometheus_converter: true
          nodeSelector:
            node_pool: observability-resources
        vmsingle:
          spec:
            retentionPeriod: 365d
            logFormat: json
            nodeSelector:
              node_pool: observability-resources
            storage:
              resources:
                requests:
                  storage: 200Gi
            serviceSpec:
              metadata:
                annotations:
                  cloud.google.com/load-balancer-type: Internal
              spec:
                type: LoadBalancer
        alertmanager:
          spec:
            nodeSelector:
              node_pool: observability-resources
            secrets:
              - pagerduty-service-key
            configSecret: null
          config:
            global:
              resolve_timeout: 5m
            route:
              group_by: ["alertname", "namespace", "pod"]
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: "pagerduty"
              routes:
                - match:
                    alertname: Watchdog
                  receiver: "blackhole"
                - receiver: "pagerduty"
            receivers:
              - name: blackhole
              - name: "pagerduty"
                pagerduty_configs:
                  - service_key_file: "/etc/vm/secrets/pagerduty-service-key/api-key"
                    url: https://events.pagerduty.com/generic/2010-04-15/create_event.json
                    send_resolved: true
        vmalert:
          spec:
            nodeSelector:
              node_pool: observability-resources
        vmauth:
          enabled: true
          spec:
            selectAllByDefault: true
            userNamespaceSelector: {}
            userSelector: {}
            nodeSelector:
              node_pool: public-pool
            unauthorizedUserAccessSpec:
              discover_backend_ips: false
              url_map: []
            ingress:
              annotations:
                cert-manager.io/issuer: letsencrypt
                kubernetes.io/ingress.class: gce
                kubernetes.io/ingress.allow-http: "false"
              tlsSecretName: vmauth-tls
              tlsHosts:
                - "vmauth.observability.dev.internal.falkordb.cloud"
        vmagent:
          enabled: false
        grafana:
          enabled: false
        prometheus-node-exporter:
          enabled: false
        kube-state-metrics:
          enabled: false
        kubelet:
          enabled: false
        kubeApiServer:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeDns:
          enabled: false
        coreDns:
          enabled: false
        kubeEtcd:
          enabled: false
        enabled:
          enabled: false
        kubeProxy:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: observability
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - RespectIgnoreDifferences=true
    automated:
      prune: true
      selfHeal: true
  ignoreDifferences:
    - group: ""
      kind: Secret
      name: vm-victoria-metrics-operator-validation
      namespace: observability
      jsonPointers:
        - /data
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: vm-victoria-metrics-operator-admission
      jqPathExpressions:
        - ".webhooks[]?.clientConfig.caBundle"
    - group: ""
      kind: Deployment
      name: vm-grafana
      namespace: observability
      jsonPointers:
        - /spec/template/metadata/annotations/checksum~1secret
