apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: grafana-alloy
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - clusters:
        selector:
          matchLabels:
            role: app-plane
  template:
    metadata:
      name: '{{ regexFind "h?c-[A-Za-z0-9]+" .name }}-alloy'
    spec:
      project: default
      source:
        chart: alloy
        repoURL: https://grafana.github.io/helm-charts
        targetRevision: 0.11.0
        helm:
          valuesObject:
            fullnameOverride: alloy
            alloy:
              configMap:
                content: |-
                  prometheus.remote_write "in_cluster" {
                    endpoint {
                      url = "http://vmsingle-vm-victoria-metrics-k8s-stack.observability.svc.cluster.local:8429/prometheus/api/v1/write"
                    }
                  }

                  prometheus.remote_write "ctrl_plane" {
                    endpoint {
                      url = "https://vmauth.observability.dev.internal.falkordb.cloud/prometheus/api/v1/write"
                      
                      basic_auth {
                        username = "{{ regexFind "h?c-[A-Za-z0-9]+" .name }}-user"
                        password_file = "/var/run/secrets/victoriametrics/vmuser/password"
                      }
                      
                      tls_config {
                        insecure_skip_verify = true
                      }
                    }
                  }

                  logging {
                    level  = "info"
                    format = "logfmt"
                  }

                  livedebugging {
                    enabled = true
                  }

                  import.git "ksm" {
                    repository     = "https://github.com/grafana/alloy-modules.git"
                    revision       = "main"
                    path           = "modules/kubernetes/kube-state-metrics/metrics.alloy"
                    pull_frequency = "15m"
                  }

                  discovery.kubernetes "nodes" {
                    role = "node"
                  }

                  discovery.kubernetes "falkordb_pods" {
                    role = "pod"

                    selectors {
                      role = "pod"
                      label = "app.kubernetes.io/managed-by=omnistrate"
                    }
                  }

                  ksm.kubernetes "targets" { }

                  prometheus.exporter.self "alloy" { }

                  discovery.relabel "metrics_cadvisor" {
                    targets = discovery.kubernetes.nodes.targets

                    rule {
                      action = "labelmap"
                      regex  = "__meta_kubernetes_node_label_(.+)"
                    }

                    rule {
                      action       = "replace"
                      target_label = "__address__"
                      replacement  = "kubernetes.default.svc.cluster.local:443"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_node_name"]
                      regex         = "(.+)"
                      action        = "replace"
                      replacement   = "/api/v1/nodes/${1}/proxy/metrics/cadvisor"
                      target_label  = "__metrics_path__"
                    }
                  }

                  discovery.relabel "metrics_kubelet" {
                    targets = discovery.kubernetes.nodes.targets

                    rule {
                      action       = "replace"
                      target_label = "__address__"
                      replacement  = "kubernetes.default.svc.cluster.local:443"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_node_name"]
                      regex         = "(.+)"
                      action        = "replace"
                      replacement   = "/api/v1/nodes/${1}/proxy/metrics"
                      target_label  = "__metrics_path__"
                    }
                  }

                  ksm.scrape "metrics" {
                    targets    = ksm.kubernetes.targets.output
                    forward_to = [prometheus.relabel.kube_state_metrics.receiver]
                  }

                  prometheus.scrape "cadvisor" {
                    scheme = "https"

                    tls_config {
                      server_name          = "kubernetes"
                      ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
                      insecure_skip_verify = false
                    }
                    bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
                    targets           = discovery.relabel.metrics_cadvisor.output
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "cadvisor"
                  }

                  prometheus.scrape "kubelet" {
                    scheme = "https"

                    tls_config {
                      server_name          = "kubernetes"
                      ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
                      insecure_skip_verify = false
                    }
                    bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
                    targets           = discovery.relabel.metrics_kubelet.output
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "kubernetes-kubelet"
                  }

                  discovery.relabel "node_exporter" {
                    targets = discovery.kubernetes.nodes.targets

                    rule {
                      source_labels = ["__meta_kubernetes_node_address_InternalIP"]
                      regex = "(.+)"
                      replacement = "$1:9100" // Node Exporter port
                      target_label = "__address__"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_node_label_topology_kubernetes_io_region"]
                      target_label = "region"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_node_annotation_node_gke_io_last_applied_node_labels"]
                      target_label = "platform"
                      regex = "(.+)"
                      replacement = "gke"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_node_label_k8s_io_cloud_provider_aws"]
                      target_label = "platform"
                      regex = "(.+)"
                      replacement = "eks"
                    }

                  }

                  prometheus.scrape "node_exporter" {
                    targets           = discovery.relabel.node_exporter.output
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "node-exporter"
                  }

                  discovery.relabel "falkordb_pods" {
                    targets = discovery.kubernetes.falkordb_pods.targets

                    rule {
                      source_labels = ["__meta_kubernetes_pod_ip"]
                      regex         = "(.+)"
                      replacement   = "$1:9121"
                      target_label  = "__address__"
                    }

                    rule {
                      source_labels     = ["__meta_kubernetes_pod_container_name"]
                      action            = "keep"
                      regex             = "service"
                    }

                    rule {
                      action = "replace"
                      target_label = "namespace"
                      source_labels = ["__meta_kubernetes_namespace"]
                    }

                    rule {
                      action = "labeldrop"
                      regex = "^instance$"
                    }

                    rule {
                      source_labels = ["__meta_kubernetes_pod_name"]
                      regex         = "(.+)"
                      target_label  = "pod"
                    }
                  }

                  prometheus.scrape "falkordb_pods" {
                    targets           = discovery.relabel.falkordb_pods.output
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "falkordb-pods"
                  }

                  discovery.relabel "falkordb_pods_9122" {
                  targets = discovery.kubernetes.falkordb_pods.targets

                  rule {
                    source_labels = ["__meta_kubernetes_pod_ip"]
                    regex         = "(.+)"
                    replacement   = "$1:9122"
                    target_label  = "__address__"
                  }

                  rule {
                    source_labels     = ["__meta_kubernetes_pod_container_name"]
                    action            = "keep"
                    regex             = "service"
                  }

                  rule {
                    action = "replace"
                    target_label = "namespace"
                    source_labels = ["__meta_kubernetes_namespace"]
                  }

                  rule {
                    action = "labeldrop"
                    regex = "^instance$"
                  }

                  rule {
                    source_labels = ["__meta_kubernetes_pod_name"]
                    regex         = "(.+)"
                    target_label  = "pod"
                  }
                  }

                  prometheus.scrape "falkordb_pods_9122" {
                    targets           = discovery.relabel.falkordb_pods_9122.output
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "falkordb-pods-9122"
                  }

                  prometheus.scrape "alloy" {
                    scheme = "https"

                    tls_config {
                      server_name          = "kubernetes"
                      ca_file              = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
                      insecure_skip_verify = false
                    }
                    bearer_token_file = "/var/run/secrets/kubernetes.io/serviceaccount/token"
                    targets           = prometheus.exporter.self.alloy.targets
                    scrape_interval   = "60s"
                    forward_to        = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "alloy"
                  }

                  prometheus.scrape "vm_operator" {
                    targets = [
                      {__address__ = "vm-victoria-metrics-operator.observability.svc.cluster.local:8080"},
                    ]
                    forward_to = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "vm-operator"
                  }

                  prometheus.scrape "vm_single" {
                    targets = [
                      {__address__ = "vmsingle-vm-victoria-metrics-k8s-stack.observability.svc.cluster.local:8429"},
                    ]
                    forward_to = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "vm-single"
                  }

                  prometheus.scrape "vm_alertmanager" {
                    targets = [
                      {__address__ = "vmalertmanager-vm-victoria-metrics-k8s-stack.observability.svc.cluster.local:9093"},
                    ]
                    forward_to = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "vm-alertmanager"
                  }

                  prometheus.scrape "vm_alert" {
                    targets = [
                      {__address__ = "vmalert-vm-victoria-metrics-k8s-stack.observability.svc.cluster.local:8080"},
                    ]
                    forward_to = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    job_name = "vm-alert"
                  }

                  prometheus.relabel "kube_state_metrics" {
                    forward_to = [prometheus.relabel.drop_unwanted_metrics.receiver]

                    rule {
                      replacement  = "kube-state-metrics"
                      target_label = "job"
                    }
                  }

                  prometheus.relabel "drop_unwanted_metrics" {
                    forward_to = [prometheus.relabel.add_cluster_label.receiver]

                    rule {
                      source_labels = ["__name__"]
                      regex         = "^(ALERTS|up|_container_status_restarts_total|redis_|___customer|___customer_redis_blocked_clients|___customer_redis_commands_duration_seconds_total|___customer_redis_commands_total|___customer_redis_connected_clients|___customer_redis_db_keys|___customer_redis_memory_max_bytes|___customer_redis_memory_used_bytes|___customer_redis_net_input_bytes_total|___customer_redis_net_output_bytes_total|___customer_redis_uptime_in_seconds|alertmanager_alerts|alertmanager_alerts_invalid_total|alertmanager_alerts_received_total|alertmanager_notification_latency_seconds_bucket|alertmanager_notification_latency_seconds_count|alertmanager_notification_latency_seconds_sum|alertmanager_notifications_failed_total|alertmanager_notifications_total|alertname|changes|chip_name|cluster|container|container!|container_cpu_cfs_throttled_seconds_total|container_cpu_usage_seconds_total|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_errors_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_errors_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|container_oom_events_total|controller|controller_runtime_active_workers|controller_runtime_max_concurrent_reconciles|controller_runtime_reconcile_errors_total|controller_runtime_reconcile_time_seconds_bucket|controller_runtime_reconcile_total|created_by_name|device|event_type|go_gc_cpu_seconds_total|go_gc_duration_seconds_count|go_gc_duration_seconds_sum|go_goroutines|go_memstats_heap_inuse_bytes|go_memstats_stack_inuse_bytes|go_memstats_sys_bytes|go_sched_latencies_seconds_bucket|grafana_alerting_result_total|grafana_build_info|grafana_http_request_duration_seconds_bucket|grafana_http_request_duration_seconds_count|grafana_http_request_duration_seconds_sum|grafana_stat_totals_dashboard|group_left|histogram_quantile|ignoring|image!|increase|instance|integration|interval|iowait|kube_configmap_info|kube_daemonset_labels|kube_deployment_labels|kube_endpoint_info|kube_hpa_labels|kube_ingress_info|kube_namespace_labels|kube_networkpolicy_labels|kube_node_info|kube_persistentvolumeclaim_info|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_last_terminated_exitcode|kube_pod_container_status_last_terminated_reason|kube_pod_container_status_ready|kube_pod_container_status_restarts_total|kube_pod_container_status_running|kube_pod_container_status_terminated|kube_pod_container_status_waiting|kube_pod_info|kube_pod_status_phase|kube_pod_status_qos_class|kube_pod_status_reason|kube_secret_info|kube_service_info|kube_statefulset_labels|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubelet_volume_stats_used_bytes|label_values|leader_election_master_status|location|machine_cpu_cores|machine_memory_bytes|memory|method|namespace|node_arp_entries|node_boot_time_seconds|node_context_switches_total|node_cooling_device_cur_state|node_cooling_device_max_state|node_cpu_core_throttles_total|node_cpu_guest_seconds_total|node_cpu_scaling_frequency_hertz|node_cpu_scaling_frequency_max_hertz|node_cpu_scaling_frequency_min_hertz|node_cpu_seconds_total|node_disk_discard_time_seconds_total|node_disk_discards_completed_total|node_disk_discards_merged_total|node_disk_io_now|node_disk_io_time_seconds_total|node_disk_io_time_weighted_seconds_total|node_disk_read_bytes_total|node_disk_read_time_seconds_total|node_disk_reads_completed_total|node_disk_reads_merged_total|node_disk_write_time_seconds_total|node_disk_writes_completed_total|node_disk_writes_merged_total|node_disk_written_bytes_total|node_entropy_available_bits|node_filefd_allocated|node_filefd_maximum|node_filesystem_avail_bytes|node_filesystem_device_error|node_filesystem_files|node_filesystem_files_free|node_filesystem_free_bytes|node_filesystem_readonly|node_filesystem_size_bytes|node_forks_total|node_hwmon_chip_names|node_hwmon_temp_celsius|node_hwmon_temp_crit_alarm_celsius|node_hwmon_temp_crit_celsius|node_hwmon_temp_crit_hyst_celsius|node_hwmon_temp_max_celsius|node_interrupts_total|node_intr_total|node_load1|node_load15|node_load5|node_memory_Active_anon_bytes|node_memory_Active_bytes|node_memory_Active_file_bytes|node_memory_AnonHugePages_bytes|node_memory_AnonPages_bytes|node_memory_Bounce_bytes|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_memory_CommitLimit_bytes|node_memory_Committed_AS_bytes|node_memory_DirectMap1G_bytes|node_memory_DirectMap2M_bytes|node_memory_DirectMap4k_bytes|node_memory_Dirty_bytes|node_memory_HardwareCorrupted_bytes|node_memory_HugePages_Free|node_memory_HugePages_Rsvd|node_memory_HugePages_Surp|node_memory_HugePages_Total|node_memory_Hugepagesize_bytes|node_memory_Inactive_anon_bytes|node_memory_Inactive_bytes|node_memory_Inactive_file_bytes|node_memory_KernelStack_bytes|node_memory_Mapped_bytes|node_memory_MemAvailable_bytes|node_memory_MemFree_bytes|node_memory_MemTotal_bytes|node_memory_Mlocked_bytes|node_memory_NFS_Unstable_bytes|node_memory_PageTables_bytes|node_memory_Percpu_bytes|node_memory_SReclaimable_bytes|node_memory_SUnreclaim_bytes|node_memory_ShmemHugePages_bytes|node_memory_ShmemPmdMapped_bytes|node_memory_Shmem_bytes|node_memory_Slab_bytes|node_memory_SwapCached_bytes|node_memory_SwapFree_bytes|node_memory_SwapTotal_bytes|node_memory_Unevictable_bytes|node_memory_VmallocChunk_bytes|node_memory_VmallocTotal_bytes|node_memory_VmallocUsed_bytes|node_memory_WritebackTmp_bytes|node_memory_Writeback_bytes|node_netstat_Icmp_InErrors|node_netstat_Icmp_InMsgs|node_netstat_Icmp_OutMsgs|node_netstat_IpExt_InOctets|node_netstat_IpExt_OutOctets|node_netstat_Ip_Forwarding|node_netstat_TcpExt_ListenDrops|node_netstat_TcpExt_ListenOverflows|node_netstat_TcpExt_SyncookiesFailed|node_netstat_TcpExt_SyncookiesRecv|node_netstat_TcpExt_SyncookiesSent|node_netstat_TcpExt_TCPOFOQueue|node_netstat_TcpExt_TCPRcvQDrop|node_netstat_TcpExt_TCPSynRetrans|node_netstat_Tcp_ActiveOpens|node_netstat_Tcp_CurrEstab|node_netstat_Tcp_InErrs|node_netstat_Tcp_InSegs|node_netstat_Tcp_MaxConn|node_netstat_Tcp_OutRsts|node_netstat_Tcp_OutSegs|node_netstat_Tcp_PassiveOpens|node_netstat_Tcp_RetransSegs|node_netstat_UdpLite_InErrors|node_netstat_Udp_InDatagrams|node_netstat_Udp_InErrors|node_netstat_Udp_NoPorts|node_netstat_Udp_OutDatagrams|node_netstat_Udp_RcvbufErrors|node_netstat_Udp_SndbufErrors|node_network_carrier|node_network_mtu_bytes|node_network_receive_bytes_total|node_network_receive_compressed_total|node_network_receive_drop_total|node_network_receive_errs_total|node_network_receive_fifo_total|node_network_receive_frame_total|node_network_receive_multicast_total|node_network_receive_packets_total|node_network_speed_bytes|node_network_transmit_bytes_total|node_network_transmit_carrier_total|node_network_transmit_colls_total|node_network_transmit_compressed_total|node_network_transmit_drop_total|node_network_transmit_errs_total|node_network_transmit_fifo_total|node_network_transmit_packets_total|node_network_transmit_queue_length|node_network_up|node_nf_conntrack_entries|node_nf_conntrack_entries_limit|node_power_supply_online|node_pressure_cpu_waiting_seconds_total|node_pressure_io_stalled_seconds_total|node_pressure_io_waiting_seconds_total|node_pressure_memory_stalled_seconds_total|node_pressure_memory_waiting_seconds_total|node_processes_max_processes|node_processes_max_threads|node_processes_pids|node_processes_state|node_processes_threads|node_procs_blocked|node_procs_running|node_schedstat_running_seconds_total|node_schedstat_timeslices_total|node_schedstat_waiting_seconds_total|node_scrape_collector_duration_seconds|node_scrape_collector_success|node_sockstat_FRAG_inuse|node_sockstat_FRAG_memory|node_sockstat_RAW_inuse|node_sockstat_TCP_alloc|node_sockstat_TCP_inuse|node_sockstat_TCP_mem|node_sockstat_TCP_mem_bytes|node_sockstat_TCP_orphan|node_sockstat_TCP_tw|node_sockstat_UDPLITE_inuse|node_sockstat_UDP_inuse|node_sockstat_UDP_mem|node_sockstat_UDP_mem_bytes|node_sockstat_sockets_used|node_softnet_dropped_total|node_softnet_processed_total|node_softnet_times_squeezed_total|node_systemd_socket_accepted_connections_total|node_systemd_units|node_tcp_connection_states|node_textfile_scrape_error|node_time_seconds|node_timex_estimated_error_seconds|node_timex_frequency_adjustment_ratio|node_timex_loop_time_constant|node_timex_maxerror_seconds|node_timex_offset_seconds|node_timex_sync_status|node_timex_tai_offset_seconds|node_timex_tick_seconds|node_uname_info|node_vmstat_oom_kill|node_vmstat_pgfault|node_vmstat_pgmajfault|node_vmstat_pgpgin|node_vmstat_pgpgout|node_vmstat_pswpin|node_vmstat_pswpout|object_type_name|offset|operator_controller_objects_count|operator_log_messages_total|operator_prometheus_converter_active_watchers|operator_prometheus_converter_watch_events_total|operator_reconcile_throttled_events_total|persistentvolumeclaim|process_cpu_cores_available|process_cpu_seconds_total|process_io_read_syscalls_total|process_io_storage_read_bytes_total|process_io_storage_written_bytes_total|process_io_write_syscalls_total|process_max_fds|process_num_threads|process_open_fds|process_resident_memory_anon_bytes|process_resident_memory_bytes|process_resident_memory_max_bytes|process_virtual_memory_bytes|process_virtual_memory_max_bytes|prometheus|prometheus_build_info|prometheus_tsdb_head_series|protocol|qos_class|reason|recording|resource|rest_client_request_duration_seconds_bucket|rest_client_requests_total|scalar|scheduler_binding_duration_seconds_bucket|scheduler_binding_duration_seconds_count|scheduler_e2e_scheduling_duration_seconds_bucket|scheduler_e2e_scheduling_duration_seconds_count|scheduler_scheduling_algorithm_duration_seconds_bucket|scheduler_scheduling_algorithm_duration_seconds_count|scheduler_volume_scheduling_duration_seconds_bucket|scheduler_volume_scheduling_duration_seconds_count|scrape_job|scrape_series_added|service|short_version|softirq|status_code|system|topk_max|unless|vector|version|vm_active_merges|vm_app_start_timestamp|vm_app_uptime_seconds|vm_app_version|vm_assisted_merges_total|vm_available_cpu_cores|vm_available_memory_bytes|vm_cache_entries|vm_cache_misses_total|vm_cache_requests_total|vm_cache_size_bytes|vm_cache_size_max_bytes|vm_concurrent_insert_capacity|vm_concurrent_insert_current|vm_data_size_bytes|vm_free_disk_space_bytes|vm_free_disk_space_limit_bytes|vm_http_request_errors_total|vm_http_requests_total|vm_ingestserver_request_errors_total|vm_ingestserver_requests_total|vm_log_messages_total|vm_new_timeseries_created_total|vm_parts|vm_pending_rows|vm_persistentqueue_bytes_dropped_total|vm_persistentqueue_read_duration_seconds_total|vm_persistentqueue_write_duration_seconds_total|vm_promscrape_conn_bytes_read_total|vm_promscrape_dial_errors_total|vm_promscrape_max_scrape_size_exceeded_errors_total|vm_promscrape_scrape_duration_seconds_bucket|vm_promscrape_scrape_pool_targets|vm_promscrape_scrape_response_size_bytes_bucket|vm_promscrape_scraped_samples_sum|vm_promscrape_scrapes_failed_total|vm_promscrape_scrapes_gunzip_failed_total|vm_promscrape_scrapes_timed_out_total|vm_promscrape_scrapes_total|vm_promscrape_targets|vm_protoparser_read_errors_total|vm_protoparser_rows_read_total|vm_protoparser_unmarshal_errors_total|vm_request_duration_seconds|vm_rows|vm_rows_added_to_storage_total|vm_rows_ignored_total|vm_rows_inserted_total|vm_rows_invalid_total|vm_rows_merged_total|vm_rows_read_per_query_bucket|vm_rows_read_per_series_bucket|vm_rows_scanned_per_query_bucket|vm_series_read_per_query_bucket|vm_slow_queries_total|vm_slow_row_inserts_total|vm_streamaggr_dedup_flush_duration_seconds_bucket|vm_streamaggr_dedup_flush_timeouts_total|vm_streamaggr_flush_timeouts_total|vm_streamaggr_ignored_samples_total|vm_streamaggr_labels_compressor_items_count|vm_streamaggr_labels_compressor_size_bytes|vm_streamaggr_matched_samples_total|vm_streamaggr_output_samples_total|vm_streamaggr_samples_lag_seconds_bucket|vm_tcplistener_accepts_total|vm_tcplistener_conns|vm_tcplistener_read_bytes_total|vm_tcplistener_written_bytes_total|vmagent_daily_series_limit_current_series|vmagent_daily_series_limit_max_series|vmagent_hourly_series_limit_current_series|vmagent_hourly_series_limit_max_series|vmagent_http_request_errors_total|vmagent_http_requests_total|vmagent_remotewrite_block_size_rows_sum|vmagent_remotewrite_conn_bytes_written_total|vmagent_remotewrite_conns|vmagent_remotewrite_packets_dropped_total|vmagent_remotewrite_pending_data_bytes|vmagent_remotewrite_queues|vmagent_remotewrite_relabel_metrics_dropped_total|vmagent_remotewrite_requests_total|vmagent_remotewrite_retries_count_total|vmagent_remotewrite_send_duration_seconds_total|vmagent_rows_inserted_total|vmalert_alerting_rules_errors_total|vmalert_alerting_rules_last_evaluation_samples|vmalert_alerts_fired_total|vmalert_alerts_firing|vmalert_alerts_pending|vmalert_alerts_send_errors_total|vmalert_alerts_sent_total|vmalert_config_last_reload_successful|vmalert_execution_errors_total|vmalert_execution_total|vmalert_iteration_duration_seconds_count|vmalert_iteration_duration_seconds_sum|vmalert_iteration_missed_total|vmalert_iteration_total|vmalert_recording_rules_errors_total|vmalert_recording_rules_last_evaluation_samples|vmalert_remotewrite_conn_bytes_written_total|vmalert_remotewrite_conns|vmalert_remotewrite_dropped_rows_total|vmalert_remotewrite_sent_rows_total|vmrange|without|workqueue_depth|mmcblk).*"
                      action        = "keep"
                    }

                  }

                  prometheus.relabel "add_cluster_label" {
                    forward_to = [prometheus.relabel.remove_unwanted_labels.receiver]

                    rule {
                      target_label  = "cluster"
                      replacement   = "{{ regexFind "h?c-[A-Za-z0-9]+" .name }}"
                    }
                  }

                  prometheus.relabel "remove_unwanted_labels" {
                    forward_to = [prometheus.remote_write.in_cluster.receiver, prometheus.remote_write.ctrl_plane.receiver]

                    rule {
                      action = "labeldrop"
                      regex  = "^(cloud_google_com|omnistrate_com).*"
                    }
                  }
              clustering:
                enabled: true
                name: alloy
              resources:
                requests:
                  cpu: 500m
                  memory: 2Gi
                limits:
                  cpu: "2"
                  memory: 6Gi
              mounts:
                extra:
                  - name: vmuser
                    mountPath: /var/run/secrets/victoriametrics/vmuser
            controller:
              type: statefulset
              nodeSelector:
                node_pool: observability
              volumes:
                extra:
                  - name: vmuser
                    secret:
                      secretName: vmuser
      destination:
        server: "{{.server}}"
        namespace: observability
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        automated:
          prune: true
          selfHeal: true
