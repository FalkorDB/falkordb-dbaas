apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-lua-scripts
  namespace: fluent-bit
data:
  victoria-logs-filter.lua: |
    # The Lua script is no longer strictly necessary if all you need is to move 'log' to '_msg',
    # and setting 'level' can be done with record_modifier.
    # Keeping the file here for reference, but the LUA FILTER is REMOVED below.
    function map_log_to_msg(tag, timestamp, record)
        if record["log"] then
            record["_msg"] = record["log"]
            record["log"] = nil
        end
        return 1, timestamp, record
    end
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    # Collects logs from Kubernetes containers
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        Mem_Buf_Limit     5MB
        DB                /var/log/flb_kube.db
        Skip_Long_Lines   On
        Path_Key          log_file

    # Collects logs from the node's syslog
    [INPUT]
        Name              tail
        Tag               node_syslog
        Path              /var/log/syslog
        Parser            syslog
        Mem_Buf_Limit     5MB
        DB                /var/log/flb_syslog.db
        Skip_Long_Lines   On

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log
        Labels              On
        Annotations         On
        Buffer_Size         1MB

    # 1. REWRITE TAG: Detects errors in the log content and re-tags the record
    [FILTER]
        Name          rewrite_tag
        Match         kube.*
        # Rule format: KEY REGEX NEW_TAG KEEP
        Rule          $log    (?i)error|fail|exception|denied|fatal|critical    kube.error.$TAG    true
        
    # 2. RECORD MODIFIER: Add 'level=error' to records that were re-tagged
    [FILTER]
        Name          record_modifier
        Match         kube.error.*
        Record        level error
        
    # 3. RECORD MODIFIER: Add 'level=info' to all other general Kubernetes logs (non-errors)
    [FILTER]
        Name          record_modifier
        Match         kube.*
        Match_Exclude kube.error.*
        Record        level info

    # 4. OUTPUT: Sends INFO container logs to VictoriaLogs
    [OUTPUT]
        Name          loki
        Match         kube.*
        # This will match logs with the 'level' field set to 'info'
        Match_Exclude kube.error.*
        Host          alloy.observability.svc.cluster.local
        Port          3100
        URI           /loki/api/v1/push
        # Note: The 'level' field is already in the record, 
        # but we add it to the Labels here for robust log stream indexing.
        Labels        namespace=$kubernetes['namespace_name'],pod=$kubernetes['pod_name'],container=$kubernetes['container_name'],level=$level
        Retry_Limit   3

    # 5. OUTPUT: Sends ERROR container logs to VictoriaLogs
    [OUTPUT]
        Name          loki
        Match         kube.error.*
        Host          alloy.observability.svc.cluster.local
        Port          3100
        URI           /loki/api/v1/push
        # The 'level' field is in the record and used for stream indexing.
        Labels        namespace=$kubernetes['namespace_name'],pod=$kubernetes['pod_name'],container=$kubernetes['container_name'],level=$level
        Retry_Limit   3

    # Sends node system logs to VictoriaLogs with specified labels
    # Adding a default 'level=syslog' label just to categorize them
    [OUTPUT]
        Name          loki
        Match         node_syslog
        Host          alloy.observability.svc.cluster.local
        Port          3100
        URI           /loki/api/v1/push
        Labels        job=node/syslog,node_name=${HOST_NAME},level=syslog
        Retry_Limit   3

  parsers.conf: |
    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep    On

    [PARSER]
        Name         syslog
        Format       regex
        Regex        ^(?<time>[^ ]* +[^ ]* +[^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:<(?<priority>[0-9]+)>)?(?:\[[^\]]+\])?(?<message>.*)$
        Time_Key     time
        Time_Format  %b %d %H:%M:%S
        Time_Keep    On