name: Build frontends

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{  github.ref_name == 'main' && 'prod' || 'dev' }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x.x"
          cache: "pnpm"

      - name: Install pnpm
        run: pnpm i --frozen-lockfile

      - name: Build Next.js App
        run: pnpm run build

      - name: Docker Build
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend/apps/auth-proxy/Dockerfile
          push: false
          tags: |
            us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:${{ github.sha }}
            us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:latest

  push:
    runs-on: ubuntu-latest
    environment: ${{  github.ref_name == 'main' && 'prod' || 'dev' }}
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    needs: build
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker Build and Push
        id: build-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend/apps/auth-proxy/Dockerfile
          push: true
          tags: |
            us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:${{ github.sha }}
            us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:latest

      - name: Get Docker Image Digest
        id: digest
        run: |
          IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:${{ github.sha }})
          echo "IMAGE_DIGEST=$IMAGE_DIGEST" >> $GITHUB_ENV

      - name: Checkout Infra Repository
        uses: actions/checkout@v4
        with:
          repository: <YOUR_USERNAME>/infrastructure
          ref: "main"
          token: ${{ secrets.INFRASTRUCTURE_TOKEN }}
          path: infrastructure

      - name: Verify File Presence
        run: |
          echo "Checking file presence:"
          ls -la argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/
          cat argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/auth-proxy.yaml

      - name: Update Deployment Manifest
        run: |
          echo "Updating deployment manifest:"
          # Print the file content before changes
          echo "Before update:"
          cat argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/auth-proxy.yaml

          # Update the image tag in the deployment manifest with the digest
          sed -i "s|image: us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:.*|image: us-central1-docker.pkg.dev/${{ secrets.TF_CTRL_PLANE_PROJECT_ID }}/frontend/auth-proxy-web:${{ github.sha }}|g" argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/auth-proxy.yaml

          # Print the file content after changes
          echo "After update:"
          cat argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/auth-proxy.yaml

      - name: Stage and Commit Changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add argocd/ctrl_plane/${{ github.ref_name == 'main' && 'prod' || 'dev' }}/manifests/auth-proxy.yaml
          # Verify the staging
          git status
          # Commit and push changes if there are modifications
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update auth-proxy-web image to version ${{ github.sha }}"
            git push origin ${{ github.ref }}
          fi
